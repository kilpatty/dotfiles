#!/bin/zsh

zmodload zsh/zprof

# @todo can we move this to exports?
export DOTFILES=$HOME/dotfiles
export DOTFILES_CONFIG=$DOTFILES/config

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES_CONFIG/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# @todo review these instructions, as this is a more efficient way to load antitode.
# https://getantidote.github.io/install

# source antidote
source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh

# initialize plugins statically with ${ZDOTDIR:-~}/.zsh_plugins.txt
antidote load ${DOTFILES_CONFIG}/zsh/plugins.txt


# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

# for homebrew completions https://docs.brew.sh/Shell-Completion
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

# autoload -Uz compinit
# typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
#
# if [ $(date +'%j') != $updated_at ]; then
#   compinit -i
# else
#   compinit -C -i
# fi

typeset -U completion_files
completion_files=($DOTFILES_CONFIG/zsh/completions/*)

for file in ${(M)completion_files}; do
    source "$file"
done

unset completion_files
unset config_files updated_at

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

function set_win_title(){
    echo -ne "\033]0; $(basename "$PWD") \007"
}

precmd_functions+=(set_win_title)

source "$HOME/.cargo/env"

eval "$(atuin init zsh)"

eval "$(starship init zsh)"

eval "$(mise activate zsh)"

eval "$(zoxide init zsh)"

# zprof
